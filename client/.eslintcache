[{"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\index.js":"1","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\App.js":"2","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\store.js":"3","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Header.js":"5","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\userReducers.js":"6","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\doctorReducers.js":"7","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientLoginScreen.js":"8","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientProfileScreen.js":"9","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorRegisterScreen.js":"10","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorProfileScreen.js":"11","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorSpaceScreen.js":"12","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientRegisterScreen.js":"13","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorPatientsScreen.js":"14","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorLoginScreen.js":"15","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\userActions.js":"16","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Loader.js":"17","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Message.js":"18","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\FormContainer.js":"19","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\doctorActions.js":"20","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\doctorConstants.js":"21","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\userConstants.js":"22","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Map.js":"23","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\LocationInfoBox.js":"24","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\LocationMarker.js":"25","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\HomeScreen.js":"26","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\DoctorCard.js":"27","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\DateTimePicker.js":"28","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\DoctorInfoScreen.js":"29","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\RdvScreen.js":"30","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\PayementScreen.js":"31","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\rdvReducers.js":"32","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\rdvConstants.js":"33","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\rdvActions.js":"34","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\rdvInfoReducers.js":"35","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\rdvInfoActions.js":"36","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\rdvInfoConstants.js":"37","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\OrderScreen.js":"38","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\PlaceOrderScreen.js":"39","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\CheckoutSteps.js":"40","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientRdvScreen.js":"41","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorRdvScreen.js":"42","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\index.js":"43","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\App.js":"44","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\store.js":"45","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\Header.js":"46","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\HomeScreen.js":"47","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\Footer.js":"48","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\DoctorInfoScreen.js":"49","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\RdvScreen.js":"50","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\PayementScreen.js":"51","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\PlaceOrderScreen.js":"52","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\OrderScreen.js":"53","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\patient\\PatientLoginScreen.js":"54","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\patient\\PatientRegisterScreen.js":"55","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\patient\\PatientRdvScreen.js":"56","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\patient\\PatientProfileScreen.js":"57","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\doctor\\DoctorSpaceScreen.js":"58","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\doctor\\DoctorLoginScreen.js":"59","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\doctor\\DoctorRegisterScreen.js":"60","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\doctor\\DoctorProfileScreen.js":"61","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\doctor\\DoctorPatientsScreen.js":"62","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\doctor\\DoctorRdvScreen.js":"63","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\reducers\\rdvReducers.js":"64","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\reducers\\userReducers.js":"65","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\reducers\\rdvInfoReducers.js":"66","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\reducers\\doctorReducers.js":"67","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\Rating.js":"68","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\Loader.js":"69","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\actions\\rdvActions.js":"70","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\Message.js":"71","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\CheckoutSteps.js":"72","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\DoctorCard.js":"73","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\actions\\userActions.js":"74","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\actions\\rdvInfoActions.js":"75","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\actions\\doctorActions.js":"76","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\LocationMarker.js":"77","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\FormContainer.js":"78","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\constants\\doctorConstants.js":"79","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\constants\\userConstants.js":"80","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\constants\\rdvInfoConstants.js":"81","C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\constants\\rdvConstants.js":"82"},{"size":316,"mtime":1609694378984,"results":"83","hashOfConfig":"84"},{"size":2693,"mtime":1610661043606,"results":"85","hashOfConfig":"84"},{"size":2504,"mtime":1610716523800,"results":"86","hashOfConfig":"84"},{"size":336,"mtime":1609694378833,"results":"87","hashOfConfig":"84"},{"size":3388,"mtime":1610491878798,"results":"88","hashOfConfig":"84"},{"size":4155,"mtime":1609694379115,"results":"89","hashOfConfig":"84"},{"size":3662,"mtime":1610480335739,"results":"90","hashOfConfig":"84"},{"size":2537,"mtime":1609694379946,"results":"91","hashOfConfig":"84"},{"size":5006,"mtime":1610661002457,"results":"92","hashOfConfig":"84"},{"size":10731,"mtime":1609694379608,"results":"93","hashOfConfig":"84"},{"size":18889,"mtime":1610663960017,"results":"94","hashOfConfig":"84"},{"size":1757,"mtime":1610663950186,"results":"95","hashOfConfig":"84"},{"size":3935,"mtime":1609720080485,"results":"96","hashOfConfig":"84"},{"size":175,"mtime":1609694379417,"results":"97","hashOfConfig":"84"},{"size":2561,"mtime":1609965373674,"results":"98","hashOfConfig":"84"},{"size":7020,"mtime":1610491958142,"results":"99","hashOfConfig":"84"},{"size":410,"mtime":1609694378908,"results":"100","hashOfConfig":"84"},{"size":249,"mtime":1609694378941,"results":"101","hashOfConfig":"84"},{"size":352,"mtime":1609694378882,"results":"102","hashOfConfig":"84"},{"size":5521,"mtime":1610491988633,"results":"103","hashOfConfig":"84"},{"size":1443,"mtime":1609961565940,"results":"104","hashOfConfig":"84"},{"size":1567,"mtime":1609694378967,"results":"105","hashOfConfig":"84"},{"size":857,"mtime":1610488382982,"results":"106","hashOfConfig":"107"},{"size":417,"mtime":1609705079203,"results":"108","hashOfConfig":"107"},{"size":365,"mtime":1609762685576,"results":"109","hashOfConfig":"84"},{"size":1030,"mtime":1609959677915,"results":"110","hashOfConfig":"84"},{"size":915,"mtime":1609964574843,"results":"111","hashOfConfig":"84"},{"size":1023,"mtime":1609969516582,"results":"112","hashOfConfig":"107"},{"size":2073,"mtime":1610220928723,"results":"113","hashOfConfig":"84"},{"size":4148,"mtime":1610220964563,"results":"114","hashOfConfig":"84"},{"size":2286,"mtime":1610221019830,"results":"115","hashOfConfig":"84"},{"size":3623,"mtime":1610658924349,"results":"116","hashOfConfig":"84"},{"size":1290,"mtime":1610658715430,"results":"117","hashOfConfig":"84"},{"size":5439,"mtime":1610713184322,"results":"118","hashOfConfig":"84"},{"size":811,"mtime":1610110821422,"results":"119","hashOfConfig":"84"},{"size":1054,"mtime":1610110789758,"results":"120","hashOfConfig":"84"},{"size":229,"mtime":1610110780784,"results":"121","hashOfConfig":"84"},{"size":6241,"mtime":1610742523794,"results":"122","hashOfConfig":"84"},{"size":4702,"mtime":1610577177066,"results":"123","hashOfConfig":"84"},{"size":1317,"mtime":1610220815413,"results":"124","hashOfConfig":"84"},{"size":3771,"mtime":1610712617824,"results":"125","hashOfConfig":"84"},{"size":3906,"mtime":1610663955621,"results":"126","hashOfConfig":"84"},{"size":316,"mtime":1609694378984,"results":"127","hashOfConfig":"128"},{"size":2693,"mtime":1610661043606,"results":"129","hashOfConfig":"128"},{"size":2584,"mtime":1611666093324,"results":"130","hashOfConfig":"128"},{"size":3388,"mtime":1610491878798,"results":"131","hashOfConfig":"128"},{"size":1030,"mtime":1609959677915,"results":"132","hashOfConfig":"128"},{"size":336,"mtime":1609694378833,"results":"133","hashOfConfig":"128"},{"size":3098,"mtime":1611762851617,"results":"134","hashOfConfig":"128"},{"size":4148,"mtime":1610220964563,"results":"135","hashOfConfig":"128"},{"size":2286,"mtime":1610221019830,"results":"136","hashOfConfig":"128"},{"size":4704,"mtime":1611603509174,"results":"137","hashOfConfig":"128"},{"size":5671,"mtime":1611622847656,"results":"138","hashOfConfig":"128"},{"size":2537,"mtime":1609694379946,"results":"139","hashOfConfig":"128"},{"size":3935,"mtime":1609720080485,"results":"140","hashOfConfig":"128"},{"size":3779,"mtime":1611620142194,"results":"141","hashOfConfig":"128"},{"size":5006,"mtime":1610661002457,"results":"142","hashOfConfig":"128"},{"size":1757,"mtime":1610663950186,"results":"143","hashOfConfig":"128"},{"size":2561,"mtime":1609965373674,"results":"144","hashOfConfig":"128"},{"size":10731,"mtime":1609694379608,"results":"145","hashOfConfig":"128"},{"size":18889,"mtime":1610663960017,"results":"146","hashOfConfig":"128"},{"size":175,"mtime":1609694379417,"results":"147","hashOfConfig":"128"},{"size":3932,"mtime":1611620791938,"results":"148","hashOfConfig":"128"},{"size":3623,"mtime":1610658924349,"results":"149","hashOfConfig":"128"},{"size":4155,"mtime":1609694379115,"results":"150","hashOfConfig":"128"},{"size":832,"mtime":1611603494658,"results":"151","hashOfConfig":"128"},{"size":4318,"mtime":1611665653919,"results":"152","hashOfConfig":"128"},{"size":1806,"mtime":1611750584980,"results":"153","hashOfConfig":"128"},{"size":410,"mtime":1609694378908,"results":"154","hashOfConfig":"128"},{"size":5459,"mtime":1611614931289,"results":"155","hashOfConfig":"128"},{"size":249,"mtime":1609694378941,"results":"156","hashOfConfig":"128"},{"size":1317,"mtime":1610220815413,"results":"157","hashOfConfig":"128"},{"size":931,"mtime":1611761856638,"results":"158","hashOfConfig":"128"},{"size":7020,"mtime":1610491958142,"results":"159","hashOfConfig":"128"},{"size":1054,"mtime":1610110789758,"results":"160","hashOfConfig":"128"},{"size":6363,"mtime":1611755356116,"results":"161","hashOfConfig":"128"},{"size":365,"mtime":1609762685576,"results":"162","hashOfConfig":"128"},{"size":352,"mtime":1609694378882,"results":"163","hashOfConfig":"128"},{"size":1743,"mtime":1611665114245,"results":"164","hashOfConfig":"128"},{"size":1567,"mtime":1609694378967,"results":"165","hashOfConfig":"128"},{"size":280,"mtime":1611603300327,"results":"166","hashOfConfig":"128"},{"size":1290,"mtime":1610658715430,"results":"167","hashOfConfig":"128"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"tw1lla",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"170"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"170"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"170"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"x5p0m5",{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"170"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"170"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"170"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"170"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hlebh9",{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\index.js",[],["341","342"],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\App.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\store.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Header.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\doctorReducers.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientLoginScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientProfileScreen.js",["343","344"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, Table, Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../../constants/userConstants';\r\n\r\nconst PatientProfileScreen = ({ location, history }) => {\r\n  const [nom, setNom] = useState('');\r\n  const [prenom, setPrenom] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector(state => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/patient/login');\r\n    } else {\r\n      if (!user.nom) {\r\n        dispatch(getUserDetails('profile'));\r\n      } else {\r\n        setNom(user.nom);\r\n        setPrenom(user.prenom);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password do not match');\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({ id: user._id, nom, prenom, email, password })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          {userInfo && <h1>Bonjour {userInfo.prenom} </h1>}\r\n          <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n              <LinkContainer to='/patient/profile'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon profile</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/patient/rdvs'>\r\n                <Nav.Link className='btn btn-light my-3'>Mes rdvs</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/patient/agenda'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon agenda</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {success && <Message variant='success'>Profile Updated</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='nom'>\r\n              <Form.Label>Nom </Form.Label>\r\n              <Form.Control\r\n                type='nom'\r\n                placeholder='Enter votre nom'\r\n                value={nom}\r\n                onChange={e => setNom(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='prenom'>\r\n              <Form.Label>Nom complet</Form.Label>\r\n              <Form.Control\r\n                type='prenom'\r\n                placeholder='Enter votre prénom'\r\n                value={prenom}\r\n                onChange={e => setPrenom(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm Password'\r\n                value={confirmPassword}\r\n                onChange={e => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientProfileScreen;\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorRegisterScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorProfileScreen.js",["345","346"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Row, Col, Nav, Button, Card } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  getDoctorDetails,\r\n  updateDoctorProfile,\r\n} from '../../actions/doctorActions';\r\nimport axios from 'axios';\r\n\r\nimport GoogleMapReact from 'google-map-react';\r\nimport LocationMarker from '../../components/LocationMarker';\r\n\r\nconst DoctorProfileScreen = ({ location, history }) => {\r\n  const [titre, setTitre] = useState('');\r\n  const [prenom, setPrenom] = useState('');\r\n  const [nom, setNom] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [specialite, setSpecialite] = useState('');\r\n  const [addressCabinet, setAddressCabinet] = useState('');\r\n  const [ville, setVille] = useState('');\r\n  const [phoneCabinet, setPhoneCabinet] = useState('');\r\n  const [phonePersonel, setPhonePersonel] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [prixConsultation, setPrixConsultation] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [diplomesEtFormations, setDiplomesEtFormations] = useState('');\r\n  const [informationsPratiques, setInformationsPratiques] = useState('');\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const doctorDetails = useSelector(state => state.doctorDetails);\r\n  const { loading, error, doctor } = doctorDetails;\r\n\r\n  const doctorLogin = useSelector(state => state.doctorLogin);\r\n  const { doctorInfo } = doctorLogin;\r\n\r\n  const doctorUpdateProfile = useSelector(state => state.doctorUpdateProfile);\r\n  const { success } = doctorUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!doctorInfo) {\r\n      history.push('/doctors/login');\r\n    } else {\r\n      if (!doctor.nom) {\r\n        dispatch(getDoctorDetails('profile'));\r\n      } else {\r\n        setTitre(doctor.titre);\r\n        setPrenom(doctor.prenom);\r\n        setNom(doctor.nom);\r\n        setEmail(doctor.email);\r\n        setSpecialite(doctor.specialite);\r\n        setAddressCabinet(doctor.addressCabinet);\r\n        setVille(doctor.ville);\r\n        setPhoneCabinet(doctor.phoneCabinet);\r\n        setPhonePersonel(doctor.phonePersonel);\r\n        setImage(doctor.image);\r\n        setPrixConsultation(doctor.prixConsultation);\r\n        setDiplomesEtFormations(doctor.diplomesEtFormations);\r\n        setDescription(doctor.description);\r\n        setInformationsPratiques(doctor.informationsPratiques);\r\n      }\r\n    }\r\n  }, [dispatch, history, doctorInfo, doctor]);\r\n\r\n  const uploadFileHandler = async e => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password do not match');\r\n    } else {\r\n      dispatch(\r\n        updateDoctorProfile({\r\n          id: doctor._id,\r\n          titre,\r\n          nom,\r\n          prenom,\r\n          email,\r\n          password,\r\n          specialite,\r\n          addressCabinet,\r\n          ville,\r\n          phoneCabinet,\r\n          phonePersonel,\r\n          image,\r\n          prixConsultation,\r\n          diplomesEtFormations,\r\n          description,\r\n          informationsPratiques,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          {/* {doctorInfo && (\r\n            <h1>\r\n              Bonjour {doctorInfo.titre} {doctorInfo.nom}{' '}\r\n            </h1>\r\n          )} */}\r\n          <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/profile'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon profile</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/patients'>\r\n                <Nav.Link className='btn btn-light my-3'>Mes patients</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/rdvs'>\r\n                <Nav.Link className='btn btn-light my-3'>\r\n                  Mes rendez-vous\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {loading && <Loader />}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        <>\r\n          {' '}\r\n          <Col md={3}>\r\n            {' '}\r\n            <Card className='my-3 p-3 rounded'>\r\n              <Card.Img\r\n                src={doctor.image}\r\n                variant='top'\r\n                className='image-profile'\r\n              />\r\n              <Form.Group controlId='image'>\r\n                <Form.Label>Image</Form.Label>\r\n                <Form.File\r\n                  id='image-file'\r\n                  label='Choose File'\r\n                  custom\r\n                  onChange={uploadFileHandler}\r\n                ></Form.File>\r\n                {uploading && <Loader />}\r\n              </Form.Group>\r\n              <Card.Body>\r\n                <Card.Title as='div'>\r\n                  <strong>\r\n                    {doctor.titre}\r\n                    {doctor.prenom}\r\n                    {doctor.nom}\r\n                  </strong>\r\n                </Card.Title>\r\n                <Card.Text as='div'>\r\n                  {/* <Rating value={product.rating} text={`$ reviews`} /> */}\r\n                </Card.Text>\r\n                <Card.Text as='h3'>{doctor.phone}</Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col md={9}>\r\n            <h4>INFORMATIONS GENERALES ET COORDONNEES</h4>\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='titre'>\r\n                <Form.Label>Titre</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  value={titre}\r\n                  onChange={e => setTitre(e.target.value)}\r\n                >\r\n                  <option>Dr. </option>\r\n                  <option>Pr.</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} md='6' controlId='prenom'>\r\n                  <Form.Label>Prenom</Form.Label>\r\n                  <Form.Control\r\n                    type='name'\r\n                    value={prenom}\r\n                    onChange={e => {\r\n                      setPrenom(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='6' controlId='nom'>\r\n                  <Form.Label>Nom</Form.Label>\r\n                  <Form.Control\r\n                    type='name'\r\n                    value={nom}\r\n                    onChange={e => {\r\n                      setNom(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Adresse Email</Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  value={email}\r\n                  onChange={e => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <hr />\r\n              <Form.Group controlId='specialite'>\r\n                <Form.Label>Specialite</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  value={specialite}\r\n                  onChange={e => {\r\n                    setSpecialite(e.target.value);\r\n                  }}\r\n                >\r\n                  <option>Choisissez votre specialité</option>\r\n                  <option>Orthodontiste</option>\r\n                  <option>Psychiatre</option>\r\n                  <option>Cardiologue</option>\r\n                  <option>Chirurgien digestif - viscéral</option>\r\n                  <option>Opticien</option>\r\n                  <option>Gastrologue</option>\r\n                  <option>entérologue</option>\r\n                  <option>Chirurgien général</option>\r\n                  <option>Chirurgien dentiste</option>\r\n                  <option>Kinésithérapeute</option>\r\n                  <option>Urologue et chirurgien urologue</option>\r\n                  <option>Oto-rhino-laryngologue</option>\r\n                  <option>Endocrinologue - maladies métaboliques</option>\r\n                  <option>Ophtalmologue</option>\r\n                  <option>Médecin Ostéopathe</option>\r\n                  <option>Gériatre</option>\r\n                  <option>Chirurgien esthétique</option>\r\n                  <option>Dermatologue</option>\r\n                  <option>Pédiatre</option>\r\n                  <option>Gynécologue obstétricien</option>\r\n                  <option>Anatomo-pathologiste</option>\r\n                  <option>Rhumatologue</option>\r\n                  <option>Orthophoniste</option>\r\n                  <option>Médecin généraliste</option>\r\n                  <option>Psychologue</option>\r\n                  <option>Nutritionniste</option>\r\n                  <option>Médecin interne</option>\r\n                  <option>Infirmier</option>\r\n                  <option>Chirurgien cardio-vasculaire</option>\r\n                  <option>Pneumologue</option>\r\n                  <option>Neurochirurgien</option>\r\n                  <option>Chirurgien orthopédiste et traumatologue</option>\r\n                  <option>Neuropsychiatre</option>\r\n                  <option>Génétique médicale</option>\r\n                  <option>Sexologue</option>\r\n                  <option>Neurologue</option>\r\n                  <option>Médecin biologiste</option>\r\n                  <option>Stomatologue et chirurgien maxillo-faciale</option>\r\n                  <option>Gynécologue sexologue</option>\r\n                  <option>Cancérologue</option>\r\n                  <option>Algologue</option>\r\n                  <option>Chirurgien réparateur et plastique</option>\r\n                  <option>Allergologue</option>\r\n                  <option>Médecin sportif</option>\r\n                  <option>Néphrologue</option>\r\n                  <option>Chirurgien pédiatre</option>\r\n                  <option>\r\n                    Médecin physique et réadaptation fonctionnelle\r\n                  </option>\r\n                  <option>Gérontologue</option>\r\n                  <option>Podologue</option>\r\n                  <option>Chirurgien hépato-biliaire et digestive</option>\r\n                  <option>Oncologue médicale</option>\r\n                  <option>Médecin légal et de travail</option>\r\n                  <option>Pédodontiste</option>\r\n                  <option>Acupuncteur</option>\r\n                  <option>Radiothérapeute</option>\r\n                  <option>Angiologue</option>\r\n                  <option>Médecin morphologique et anti-âge</option>\r\n                  <option>Diététicien</option>\r\n                  <option>Radiologue</option>\r\n                  <option>Psychomotricité</option>\r\n                  <option>Chirurgien cancérologue</option>\r\n                  <option>Anesthésiste-réanimateur</option>\r\n                  <option>Médecine nucléaire</option>\r\n                  <option>Homéopathe</option>\r\n                  <option>Orthopédiste dento-faciale</option>\r\n                  <option>Pharmacologue</option>\r\n                  <option>Parodontologue</option>\r\n                  <option>infectiologue</option>\r\n                  <option>Odontologue chirurgicale</option>\r\n                  <option>Chirurgien thoracique</option>\r\n                  <option>Biologiste vétérinaire</option>\r\n                  <option>Réanimateur</option>\r\n                  <option>Médecin urgentiste</option>\r\n                  <option>Autre</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} md='6' controlId='AddressCabinet'>\r\n                  <Form.Label>Numero et rue du cabinet</Form.Label>\r\n                  <Form.Control\r\n                    value={addressCabinet}\r\n                    onChange={e => {\r\n                      setAddressCabinet(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='6' controlId='city'>\r\n                  <Form.Label>Ville</Form.Label>\r\n                  <Form.Control\r\n                    value={ville}\r\n                    onChange={e => {\r\n                      setVille(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              {doctorInfo.location.coordinates ? (\r\n                <Form.Group className='map' as={Col} md='12'>\r\n                  <GoogleMapReact\r\n                    bootstrapURLKeys={{\r\n                      key: 'AIzaSyD9yHl3vgj69oEh9DN35jPPtc0bhksyK5A',\r\n                    }}\r\n                    defaultCenter={{\r\n                      lat: 33.5731,\r\n                      lng: -7.5898,\r\n                    }}\r\n                    defaultZoom={6}\r\n                  >\r\n                    <LocationMarker\r\n                      lat={doctorInfo.location.coordinates[1]}\r\n                      lng={doctorInfo.location.coordinates[0]}\r\n                    ></LocationMarker>\r\n                  </GoogleMapReact>\r\n                </Form.Group>\r\n              ) : (\r\n                <Form.Group className='map' as={Col} md='12'>\r\n                  <GoogleMapReact\r\n                    bootstrapURLKeys={{\r\n                      key: 'AIzaSyD9yHl3vgj69oEh9DN35jPPtc0bhksyK5A',\r\n                    }}\r\n                    defaultCenter={{\r\n                      lat: 33.5731,\r\n                      lng: -7.5898,\r\n                    }}\r\n                    defaultZoom={6}\r\n                  ></GoogleMapReact>\r\n                </Form.Group>\r\n              )}\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} md='6' controlId='phoneCabinet'>\r\n                  <Form.Label>Numéro de Téléphone (cabinet)</Form.Label>\r\n                  <Form.Control\r\n                    value={phoneCabinet}\r\n                    onChange={e => {\r\n                      setPhoneCabinet(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='6' controlId='phonePersonel'>\r\n                  <Form.Label>Phone personnel</Form.Label>\r\n                  <Form.Control\r\n                    value={phonePersonel}\r\n                    onChange={e => {\r\n                      setPhonePersonel(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md='12' controlId='prixConsultation'>\r\n                  <Form.Label>Prix de la consultation</Form.Label>\r\n                  <Form.Control\r\n                    value={prixConsultation}\r\n                    onChange={e => {\r\n                      setPrixConsultation(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='12' controlId='diplomesEtFormations'>\r\n                  <Form.Label>Diplomes et formations</Form.Label>\r\n                  <Form.Control\r\n                    value={diplomesEtFormations}\r\n                    onChange={e => {\r\n                      setDiplomesEtFormations(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n\r\n                  <Form.Group as={Col} md='12' controlId='description'>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      as='textarea'\r\n                      rows={3}\r\n                      value={description}\r\n                      onChange={e => setDescription(e.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md='12'\r\n                    controlId='informationsPratiques'\r\n                  >\r\n                    <Form.Label>Informations pratiques</Form.Label>\r\n                    <Form.Control\r\n                      as='textarea'\r\n                      rows={3}\r\n                      value={informationsPratiques}\r\n                      onChange={e => setInformationsPratiques(e.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <hr />\r\n\r\n              <h4>CONFIDENTIALITE</h4>\r\n              <Form.Row>\r\n                <Form.Group as={Col} md='6' controlId='password'>\r\n                  <Form.Label>Mot de passe</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter votre mot de passe'\r\n                    value={password}\r\n                    onChange={e => {\r\n                      setPassword(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='6' controlId='confirmPassword'>\r\n                  <Form.Label>Confirmer mot de passe</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Confirmer votre mot de passe'\r\n                    value={confirmPassword}\r\n                    onChange={e => {\r\n                      setConfirmPassword(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <hr />\r\n              <Button type='submit' variant='primary'>\r\n                Enregister les modifications\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoctorProfileScreen;\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorSpaceScreen.js",["347","348","349","350","351","352","353","354","355","356","357"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button, Row, Col, Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport FormContainer from '../../components/FormContainer';\r\n\r\nconst DoctorSpaceScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const doctorLogin = useSelector(state => state.doctorLogin);\r\n  const { doctorInfo } = doctorLogin;\r\n\r\n  const doctorDetails = useSelector(state => state.doctorDetails);\r\n  const { loading, error, doctor } = doctorDetails;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          {/* {doctorInfo && (\r\n            <h1>\r\n              Bonjour {doctorInfo.titre} {doctorInfo.nom}{' '}\r\n            </h1>\r\n          )} */}\r\n          <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/profile'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon profile</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/patients'>\r\n                <Nav.Link className='btn btn-light my-3'>Mes patients</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/rdvs'>\r\n                <Nav.Link className='btn btn-light my-3'>\r\n                  Mes rendez-vous\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoctorSpaceScreen;\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientRegisterScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorPatientsScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorLoginScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Message.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\doctorActions.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\doctorConstants.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Map.js",["358","359","360"],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\LocationInfoBox.js",[],["361","362"],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\LocationMarker.js",["363"],"import React from 'react';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport mapPin from '@iconify-icons/fa-solid/map-pin';\r\n\r\nconst LocationMarker = ({ lat, lng, onClick }) => {\r\n  return (\r\n    <div className='location-marker' onClick={onClick}>\r\n      <Icon icon={mapPin} className='map-pin' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationMarker;\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\DoctorCard.js",["364","365"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Form, Row, Col } from 'react-bootstrap';\r\n\r\nconst DoctorCard = ({ doctor }) => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Card className='my-3 p-3 rounded'>\r\n          <Link to={`/doctor/${doctor._id}`}>\r\n            <Card.Img src={doctor.image} variant='top' />\r\n            <Card.Body>\r\n              <Card.Title as='div'>\r\n                <strong>\r\n                  {doctor.titre} {doctor.prenom} {doctor.nom}\r\n                </strong>\r\n              </Card.Title>\r\n\r\n              <Card.Text as='div'>\r\n                {/* <Rating value={product.rating} text={`$ reviews`} /> */}\r\n              </Card.Text>\r\n              <Card.Text as='h6'>{doctor.phoneCabinet}</Card.Text>\r\n            </Card.Body>\r\n          </Link>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DoctorCard;\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\DateTimePicker.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\DoctorInfoScreen.js",["366"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Figure } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { getDoctorInfo } from '../actions/doctorActions';\r\nimport DayTimePicker from '@mooncake-dev/react-day-time-picker';\r\nimport { saveDate } from '../actions/rdvInfoActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nconst DoctorInfoScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const doctorInfoById = useSelector(state => state.doctorInfoById);\r\n\r\n  const { loading, doctor, error } = doctorInfoById;\r\n\r\n  useEffect(() => {\r\n    dispatch(getDoctorInfo(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const handleScheduled = date => {\r\n    dispatch(saveDate(date));\r\n    history.push(`/patient/login?redirect=/rdvinfo`);\r\n  };\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Revenir à la page précedante\r\n      </Link>\r\n      <CheckoutSteps step1 step2 />\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          {' '}\r\n          <Row>\r\n            <Col>\r\n              <Figure>\r\n                <Figure.Image\r\n                  width={342}\r\n                  height={360}\r\n                  alt='171x180'\r\n                  src={doctor.image}\r\n                />\r\n                <Figure.Caption>\r\n                  Nulla vitae elit libero, a pharetra augue mollis interdum.\r\n                </Figure.Caption>\r\n              </Figure>\r\n            </Col>\r\n            <Col>\r\n              <DayTimePicker\r\n                timeSlotSizeMinutes={30}\r\n                onConfirm={handleScheduled}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={5}></Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoctorInfoScreen;\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\RdvScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\PayementScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\rdvReducers.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\rdvConstants.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\rdvActions.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\rdvInfoReducers.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\rdvInfoActions.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\rdvInfoConstants.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\OrderScreen.js",["367"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Col, Button, ListGroup, Row, Image, Card } from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n  patientGetRdvDetails,\r\n  doctorGetRdvDetails,\r\n  payRdv,\r\n  deliverRdv,\r\n} from '../actions/rdvActions';\r\nimport axios from 'axios';\r\nimport { RDV_PAY_RESET } from '../constants/rdvConstants';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const rdvId = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const rdvDetails = useSelector(state => state.rdvDetails);\r\n  const { loading, error, rdv } = rdvDetails;\r\n\r\n  const rdvPay = useSelector(state => state.rdvPay);\r\n  const { loading: loadingPay, success: successPay } = rdvPay;\r\n\r\n  const rdvDeliver = useSelector(state => state.rdvDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = rdvDeliver;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const doctorLogin = useSelector(state => state.doctorLogin);\r\n  const { doctorInfo } = doctorLogin;\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n    if (!rdv._id || successPay || successDeliver) {\r\n      dispatch({ type: RDV_PAY_RESET });\r\n      if (userInfo) {\r\n        dispatch(patientGetRdvDetails(rdvId));\r\n      } else {\r\n        dispatch(doctorGetRdvDetails(rdvId));\r\n      }\r\n    } else if (!rdv.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, rdvId, rdv, successPay, history, successDeliver, userInfo]);\r\n\r\n  const successPaymentHandler = paymentResult => {\r\n    dispatch(payRdv(rdvId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverRdv(rdv));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Date de rendez-vous</h2>\r\n                <p>\r\n                  <strong>Date: </strong> {rdv.rdvDate}\r\n                </p>\r\n                {rdv.isDelivered ? (\r\n                  <Message variant='success'>\r\n                    Delivered on {rdv.deliveredAt}\r\n                  </Message>\r\n                ) : (\r\n                  <Message variant='danger'>Not Delivered</Message>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h2>Payment Method</h2>\r\n                <p>\r\n                  <strong>Method: </strong> {rdv.paymentMethod}\r\n                </p>\r\n                {rdv.isPaid ? (\r\n                  <Message variant='success'>Paid on {rdv.paidAt}</Message>\r\n                ) : (\r\n                  <Message variant='danger'>Not Paid</Message>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h2>Reference du rendez-vous</h2>\r\n\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>{rdv._id}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h2>Resume de rdv</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Type de consultation</Col>\r\n                    <Col>{rdv.typeConsultation}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Prix de consultation</Col>\r\n                    <Col>{rdv.rdvPrix} MAD</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Tax</Col>\r\n                    <Col>{rdv.taxPrice} MAD</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Total</Col>\r\n                    <Col>{rdv.totalPrice} MAD</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  {error && <Message variant='danger'>{error}</Message>}\r\n                </ListGroup.Item>\r\n\r\n                {!rdv.isPaid && (\r\n                  <ListGroup.Item>\r\n                    {loadingPay && <Loader />}\r\n                    {!sdkReady ? (\r\n                      <Loader />\r\n                    ) : (\r\n                      <PayPalButton\r\n                        amount={rdv.totalPrice}\r\n                        onSuccess={successPaymentHandler}\r\n                      />\r\n                    )}\r\n                  </ListGroup.Item>\r\n                )}\r\n                {loadingDeliver && <Loader />}\r\n                {doctorInfo && rdv.isPaid && !rdv.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientRdvScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorRdvScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\index.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\App.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\store.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\Header.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\HomeScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\Footer.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\DoctorInfoScreen.js",["368","369","370","371","372","373","374","375","376"],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\RdvScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\PayementScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\OrderScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\patient\\PatientLoginScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\patient\\PatientRegisterScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\patient\\PatientRdvScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\patient\\PatientProfileScreen.js",["377","378"],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\doctor\\DoctorSpaceScreen.js",["379","380","381","382","383","384","385","386","387","388","389"],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\doctor\\DoctorLoginScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\doctor\\DoctorRegisterScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\doctor\\DoctorProfileScreen.js",["390","391"],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\doctor\\DoctorPatientsScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\screens\\doctor\\DoctorRdvScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\reducers\\rdvReducers.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\reducers\\userReducers.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\reducers\\rdvInfoReducers.js",["392"],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\reducers\\doctorReducers.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\Rating.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\Loader.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\actions\\rdvActions.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\Message.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\DoctorCard.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\actions\\userActions.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\actions\\rdvInfoActions.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\actions\\doctorActions.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\LocationMarker.js",["393"],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\components\\FormContainer.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\constants\\doctorConstants.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\constants\\userConstants.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\constants\\rdvInfoConstants.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health\\client\\src\\constants\\rdvConstants.js",[],{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","severity":1,"message":"399","line":2,"column":34,"nodeType":"400","messageId":"401","endLine":2,"endColumn":39},{"ruleId":"398","severity":1,"message":"402","line":8,"column":10,"nodeType":"400","messageId":"401","endLine":8,"endColumn":35},{"ruleId":"398","severity":1,"message":"403","line":5,"column":10,"nodeType":"400","messageId":"401","endLine":5,"endColumn":14},{"ruleId":"398","severity":1,"message":"404","line":35,"column":10,"nodeType":"400","messageId":"401","endLine":35,"endColumn":17},{"ruleId":"398","severity":1,"message":"403","line":2,"column":10,"nodeType":"400","messageId":"401","endLine":2,"endColumn":14},{"ruleId":"398","severity":1,"message":"405","line":4,"column":10,"nodeType":"400","messageId":"401","endLine":4,"endColumn":14},{"ruleId":"398","severity":1,"message":"406","line":4,"column":16,"nodeType":"400","messageId":"401","endLine":4,"endColumn":22},{"ruleId":"398","severity":1,"message":"407","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":15},{"ruleId":"398","severity":1,"message":"408","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":14},{"ruleId":"398","severity":1,"message":"409","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":21},{"ruleId":"398","severity":1,"message":"410","line":11,"column":9,"nodeType":"400","messageId":"401","endLine":11,"endColumn":17},{"ruleId":"398","severity":1,"message":"411","line":14,"column":11,"nodeType":"400","messageId":"401","endLine":14,"endColumn":21},{"ruleId":"398","severity":1,"message":"412","line":17,"column":11,"nodeType":"400","messageId":"401","endLine":17,"endColumn":18},{"ruleId":"398","severity":1,"message":"413","line":17,"column":20,"nodeType":"400","messageId":"401","endLine":17,"endColumn":25},{"ruleId":"398","severity":1,"message":"414","line":17,"column":27,"nodeType":"400","messageId":"401","endLine":17,"endColumn":33},{"ruleId":"398","severity":1,"message":"415","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"416","line":2,"column":23,"nodeType":"400","messageId":"401","endLine":2,"endColumn":34},{"ruleId":"398","severity":1,"message":"417","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":23},{"ruleId":"394","replacedBy":"418"},{"ruleId":"396","replacedBy":"419"},{"ruleId":"398","severity":1,"message":"420","line":2,"column":16,"nodeType":"400","messageId":"401","endLine":2,"endColumn":26},{"ruleId":"398","severity":1,"message":"415","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"405","line":3,"column":16,"nodeType":"400","messageId":"401","endLine":3,"endColumn":20},{"ruleId":"398","severity":1,"message":"415","line":1,"column":28,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"421","line":3,"column":39,"nodeType":"400","messageId":"401","endLine":3,"endColumn":44},{"ruleId":"398","severity":1,"message":"422","line":3,"column":28,"nodeType":"400","messageId":"401","endLine":3,"endColumn":37},{"ruleId":"398","severity":1,"message":"405","line":3,"column":39,"nodeType":"400","messageId":"401","endLine":3,"endColumn":43},{"ruleId":"398","severity":1,"message":"406","line":3,"column":45,"nodeType":"400","messageId":"401","endLine":3,"endColumn":51},{"ruleId":"398","severity":1,"message":"423","line":11,"column":8,"nodeType":"400","messageId":"401","endLine":11,"endColumn":14},{"ruleId":"398","severity":1,"message":"424","line":17,"column":10,"nodeType":"400","messageId":"401","endLine":17,"endColumn":16},{"ruleId":"398","severity":1,"message":"425","line":18,"column":10,"nodeType":"400","messageId":"401","endLine":18,"endColumn":17},{"ruleId":"398","severity":1,"message":"426","line":23,"column":12,"nodeType":"400","messageId":"401","endLine":23,"endColumn":29},{"ruleId":"398","severity":1,"message":"427","line":27,"column":11,"nodeType":"400","messageId":"401","endLine":27,"endColumn":19},{"ruleId":"398","severity":1,"message":"428","line":51,"column":9,"nodeType":"400","messageId":"401","endLine":51,"endColumn":22},{"ruleId":"398","severity":1,"message":"399","line":2,"column":34,"nodeType":"400","messageId":"401","endLine":2,"endColumn":39},{"ruleId":"398","severity":1,"message":"402","line":8,"column":10,"nodeType":"400","messageId":"401","endLine":8,"endColumn":35},{"ruleId":"398","severity":1,"message":"403","line":2,"column":10,"nodeType":"400","messageId":"401","endLine":2,"endColumn":14},{"ruleId":"398","severity":1,"message":"405","line":4,"column":10,"nodeType":"400","messageId":"401","endLine":4,"endColumn":14},{"ruleId":"398","severity":1,"message":"406","line":4,"column":16,"nodeType":"400","messageId":"401","endLine":4,"endColumn":22},{"ruleId":"398","severity":1,"message":"407","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":15},{"ruleId":"398","severity":1,"message":"408","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":14},{"ruleId":"398","severity":1,"message":"409","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":21},{"ruleId":"398","severity":1,"message":"410","line":11,"column":9,"nodeType":"400","messageId":"401","endLine":11,"endColumn":17},{"ruleId":"398","severity":1,"message":"411","line":14,"column":11,"nodeType":"400","messageId":"401","endLine":14,"endColumn":21},{"ruleId":"398","severity":1,"message":"412","line":17,"column":11,"nodeType":"400","messageId":"401","endLine":17,"endColumn":18},{"ruleId":"398","severity":1,"message":"413","line":17,"column":20,"nodeType":"400","messageId":"401","endLine":17,"endColumn":25},{"ruleId":"398","severity":1,"message":"414","line":17,"column":27,"nodeType":"400","messageId":"401","endLine":17,"endColumn":33},{"ruleId":"398","severity":1,"message":"403","line":5,"column":10,"nodeType":"400","messageId":"401","endLine":5,"endColumn":14},{"ruleId":"398","severity":1,"message":"404","line":35,"column":10,"nodeType":"400","messageId":"401","endLine":35,"endColumn":17},{"ruleId":"398","severity":1,"message":"429","line":6,"column":3,"nodeType":"400","messageId":"401","endLine":6,"endColumn":17},{"ruleId":"398","severity":1,"message":"420","line":2,"column":16,"nodeType":"400","messageId":"401","endLine":2,"endColumn":26},"no-native-reassign",["430"],"no-negated-in-lhs",["431"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'Link' is defined but never used.","'message' is assigned a value but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'FormContainer' is defined but never used.","'dispatch' is assigned a value but never used.","'doctorInfo' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'doctor' is assigned a value but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'LocationInfoBox' is defined but never used.",["430"],["431"],"'InlineIcon' is defined but never used.","'Image' is defined but never used.","'ListGroup' is defined but never used.","'Rating' is defined but never used.","'rating' is assigned a value but never used.","'comment' is assigned a value but never used.","'errorDoctorReview' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","'RDV_INFO_RESET' is defined but never used.","no-global-assign","no-unsafe-negation"]